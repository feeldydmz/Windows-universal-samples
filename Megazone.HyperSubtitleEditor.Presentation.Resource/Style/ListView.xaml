<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mz="http://schemas.megazone.co.kr">

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Canvas.Right" Value="-9" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="1"
                                   Opacity="0.8" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_GridViewColumnHeaderDefault" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="#FF78818e" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <Border Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="HeaderContent"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="10,0" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter.Resources>

                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </Border>
                        </Border>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#FF8d95a0" />
                            <!--<Setter Property="Foreground" Value="#FF596075" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#FF717a86" />
                            <!--<Setter Property="Foreground" Value="#FF4d5469" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas x:Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="White" Height="{TemplateBinding ActualHeight}" Opacity="0.3"
                                           Width="{TemplateBinding ActualWidth}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource Style_GridViewColumnHeaderDefault}" />

    <!--아웃풋 상세에서 사용되는 약간 밝은톤의 컬럼헤더 스타일-->
    <Style x:Key="Style_GridViewColumnHeaderLight" TargetType="{x:Type GridViewColumnHeader}"
           BasedOn="{StaticResource Style_GridViewColumnHeaderDefault}">
        <Setter Property="Height" Value="24" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="#FFf5f7fa" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <Border Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="HeaderContent"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="10,0" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter.Resources>

                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </Border>
                        </Border>
                        <Rectangle Height="1" VerticalAlignment="Bottom" Fill="#FFdbdfe5" IsHitTestVisible="False" />
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"
                                   Background="#FFd3d7df" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#FFedf0f4" />
                            <!--<Setter Property="Foreground" Value="#FF596075" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#FFd9dde3" />
                            <!--<Setter Property="Foreground" Value="#FF4d5469" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_GridViewColumnHeaderAscend" TargetType="{x:Type GridViewColumnHeader}"
           BasedOn="{StaticResource Style_GridViewColumnHeaderDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="10,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="HeaderContent" RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                    <Path x:Name="PART_Arrow" Data="M0,-2.25 L-5.25,3 5.25,3 z" Grid.Column="1"
                                          HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,1,4,-1"
                                          Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill"
                                          UseLayoutRounding="True" Width="7" RenderTransformOrigin="0.5,0.5" />
                                </Grid>
                            </Border>
                        </Border>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#FF8d95a0" />
                            <!--<Setter Property="Foreground" Value="#FF596075" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#FF717a86" />
                            <!--<Setter Property="Foreground" Value="#FF4d5469" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_GridViewColumnHeaderDescend" TargetType="{x:Type GridViewColumnHeader}"
           BasedOn="{StaticResource Style_GridViewColumnHeaderDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="10,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="HeaderContent" RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                    <Path x:Name="PART_Arrow" Data="M0,-2.25 L-5.25,3 5.25,3 z" Grid.Column="1"
                                          HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,0"
                                          Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill"
                                          UseLayoutRounding="True" Width="7" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="180" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Border>
                        </Border>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#FF8d95a0" />
                            <!--<Setter Property="Foreground" Value="#FF596075" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#FF717a86" />
                            <!--<Setter Property="Foreground" Value="#FF4d5469" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_ListViewItemDefault" TargetType="{x:Type ListViewItem}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource Style_DefaultFocusVisual}" />-->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="#FFeff1f3" />
        <Setter Property="Padding" Value="0,0,0,1" />
        <Setter Property="Foreground" Value="#FF222222" />
        <!--<Setter Property="Foreground" Value="#FFcdd3dd" />-->
        <Setter Property="BorderBrush" Value="#FF42444d" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <!--보더 없이 아래 레이아웃에 rectangle로 적용-->
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <!--드래그앤 드롭을 위해 배경 등은 HitTestVisible. 컨텐츠는 따로 빼놨음-->
                    <Grid>
                        <Border IsHitTestVisible="False"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="True">

                            <Grid x:Name="PART_ContentArea">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                    </Style>
                                </Grid.Resources>
                                <Rectangle x:Name="PART_Select" Fill="#FF61a5ef" Opacity="0.3" Visibility="Hidden"
                                           IsHitTestVisible="False" />
                                <Rectangle x:Name="PART_Over" Fill="#FF61a5ef" Opacity="0.1"
                                           RadiusX="1" RadiusY="1" Visibility="Hidden" IsHitTestVisible="False" />
                                <Rectangle x:Name="PART_Line" Height="1"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                           VerticalAlignment="Bottom" IsHitTestVisible="False" Fill="#FFe0e3e8">
                                    <!--끝까지 안나와서 그라데이션-->
                                    <!--<Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0" Color="#15FFFFFF" />
                                            <GradientStop Offset="1" Color="#00FFFFFF" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>-->
                                </Rectangle>
                            </Grid>
                        </Border>
                        <GridViewRowPresenter x:Name="PART_Content" Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Rectangle x:Name="PART_SelectionGripper" Fill="Transparent" Visibility="Hidden" Opacity="0.3" />
                        <Rectangle x:Name="PART_CanDrop" Fill="Transparent" Stroke="{DynamicResource Brush_PointColor}"
                                   StrokeThickness="1"
                                   Visibility="Hidden" IsHitTestVisible="False" />
                        <Border x:Name="KeyboardFocusedObject" Background="#44afd7ff" BorderBrush="#FF5fa5f0"
                                BorderThickness="0,1" IsHitTestVisible="False" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="KeyboardFocusedObject" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Over" />
                        </MultiTrigger>
                        <!--아이템은 선택도 안되고 리스트는 언포커스-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <!--선택되었으나 포커스를 잃은 상태. 포커스상태와 차이를 두기위해 적용-->
                            <!--<Setter Property="Opacity" Value="0.75" TargetName="PART_Content" />-->
                        </MultiTrigger>
                        <!--선택되고 리스트는 언포커스-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--아이템이 선택되었을 때 버튼 등이 클릭될 수 있도록 zindex 위로. 선택되지 않았을 때는 Selection Gripper가 보이지 않으므로 상관없음-->
                            <Setter Property="Background" Value="#FFe9ebef" />
                            <Setter Property="Panel.ZIndex" Value="1" TargetName="PART_Content" />
                            <!--<Setter Property="Opacity" Value="0.5" TargetName="PART_ContentArea" />-->
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="PART_Select" />-->
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="PART_SelectionGripper" />-->
                        </MultiTrigger>
                        <!--선택되고 리스트도 포커스드-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--아이템이 선택되었을 때 버튼 등이 클릭될 수 있도록 zindex 위로. 선택되지 않았을 때는 Selection Gripper가 보이지 않으므로 상관없음-->
                            <!--<Setter Property="Background" Value="#FFe9ebef"/>-->
                            <Setter Property="Panel.ZIndex" Value="1" TargetName="PART_Content" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Select" />
                            <!--<Setter Property="Visibility" Value="Collapsed" TargetName="PART_Over" />-->
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="PART_SelectionGripper" />-->
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>

                        <!--<Trigger Property="mz:DragDropProperty.CanDrop" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_CanDrop" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--하단 탭에서 사용되는 리스트아이템 전체영역으로 선택할 수 있는 일반 아이템 스타일. 템플릿 영역만 살짝 다름-->
    <Style x:Key="Style_TabListItem" TargetType="{x:Type ListViewItem}"
           BasedOn="{StaticResource Style_ListViewItemDefault}">
        <Setter Property="BorderBrush" Value="#FFe0e3e8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <!--드래그앤 드롭을 담당하는 영역과 IsHitTest Visible만 다름. 추후 변경을 위해 나머지 구조는 유사하게 해놓음-->
                    <Grid>
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="True">

                            <Grid x:Name="PART_ContentArea">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                    </Style>
                                </Grid.Resources>
                                <Rectangle x:Name="PART_Select" Fill="#FF61a5ef" Opacity="0.3" Visibility="Hidden"
                                           IsHitTestVisible="False" />
                                <Rectangle x:Name="PART_Over" Fill="#FF61a5ef" Opacity="0.1"
                                           RadiusX="1" RadiusY="1" Visibility="Hidden" IsHitTestVisible="False" />
                                <Rectangle x:Name="PART_Line" Height="1" Fill="{TemplateBinding BorderBrush}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                           VerticalAlignment="Bottom" IsHitTestVisible="False" />
                            </Grid>
                        </Border>
                        <GridViewRowPresenter x:Name="PART_Content" Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                        <!--드래그 앤 드롭, 드래그 선택 등이 없기 때문에 보여질 필요가 없음-->
                        <!--<Rectangle x:Name="PART_SelectionGripper" Fill="Transparent" Visibility="Hidden" Opacity="0.3" />
                        <Rectangle x:Name="PART_CanDrop" Fill="Transparent" Stroke="{DynamicResource Brush_PointColor}" StrokeThickness="1"
                                   Visibility="Hidden" IsHitTestVisible="False" />-->
                        <Border x:Name="KeyboardFocusedObject" Background="#44afd7ff" BorderBrush="#FF5fa5f0"
                                BorderThickness="0,1" IsHitTestVisible="False" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="KeyboardFocusedObject" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Over" />
                        </MultiTrigger>
                        <!--아이템은 선택도 안되고 리스트는 언포커스-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <!--선택되었으나 포커스를 잃은 상태. 포커스상태와 차이를 두기위해 적용-->
                            <!--<Setter Property="Opacity" Value="0.75" TargetName="PART_Content" />-->
                        </MultiTrigger>
                        <!--선택되고 리스트는 언포커스-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--아이템이 선택되었을 때 버튼 등이 클릭될 수 있도록 zindex 위로. 선택되지 않았을 때는 Selection Gripper가 보이지 않으므로 상관없음-->
                            <Setter Property="Background" Value="#FFe9ebef" />
                            <Setter Property="Panel.ZIndex" Value="1" TargetName="PART_Content" />
                            <Setter Property="Opacity" Value="0.5" TargetName="PART_ContentArea" />
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="PART_Select" />-->
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="PART_SelectionGripper" />-->
                        </MultiTrigger>
                        <!--선택되고 리스트도 포커스드-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--아이템이 선택되었을 때 버튼 등이 클릭될 수 있도록 zindex 위로. 선택되지 않았을 때는 Selection Gripper가 보이지 않으므로 상관없음-->
                            <Setter Property="Panel.ZIndex" Value="1" TargetName="PART_Content" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Select" />
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="PART_SelectionGripper" />-->
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>

                        <!--<Trigger Property="mz:DragDropProperty.CanDrop" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_CanDrop" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_ListViewScrollViewer" TargetType="{x:Type ScrollViewer}">
        <!--<Setter Property="Background" Value="White" />-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--리스트뷰 아이템과 이질감 없도록 리스트뷰의 백그라운드 색 적용-->
                        <!--<Rectangle Fill="#FF3a3c45" />-->
                        <DockPanel Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top" Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                                <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                                <GridViewHeaderRowPresenter
                                    AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Content="{TemplateBinding Content}"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal"
                                   Grid.Row="1" Grid.Column="0"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Row="0" Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Orientation="Vertical"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                        <DockPanel Background="Transparent" Grid.Column="1" LastChildFill="False" Grid.Row="1">
                            <Rectangle DockPanel.Dock="Left" Fill="Transparent"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1" />
                            <Rectangle DockPanel.Dock="Top" Fill="Transparent" Height="1"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_ListViewDefault" TargetType="{x:Type ListView}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource Style_ListViewItemDefault}" />
        <Setter Property="Background" Value="#FFeff1f3" />
        <Setter Property="BorderBrush" Value="#FFa0a8b6" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <ScrollViewer Padding="{TemplateBinding Padding}"
                                          Style="{DynamicResource Style_ListViewScrollViewer}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <Rectangle x:Name="FolderDragEnterObject" IsHitTestVisible="False" StrokeThickness="1"
                                       Stroke="{DynamicResource Brush_PointColor}" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--임시 트리거-->
                        <Trigger Property="mz:DragDropProperty.CanDrop" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="FolderDragEnterObject" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource Style_ListViewDefault}" />

    <Style x:Key="Style_ListViewItemLeftAlign" TargetType="{x:Type ListViewItem}"
           BasedOn="{StaticResource Style_ListViewItemDefault}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <!--드래그앤 드롭을 위해 배경 등은 HitTestVisible. 컨텐츠는 따로 빼놨음-->
                    <Grid HorizontalAlignment="Left">
                        <Border IsHitTestVisible="False"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="True">

                            <Grid x:Name="PART_ContentArea">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                    </Style>
                                </Grid.Resources>
                                <Rectangle x:Name="PART_Select" Fill="#FF61a5ef" Opacity="0.3" Visibility="Hidden"
                                           IsHitTestVisible="False" />
                                <Rectangle x:Name="PART_Over" Fill="#FF61a5ef" Opacity="0.1"
                                           RadiusX="1" RadiusY="1" Visibility="Hidden" IsHitTestVisible="False" />
                                <Rectangle x:Name="PART_Line" Height="1"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                           VerticalAlignment="Bottom" IsHitTestVisible="False" Fill="#FFe0e3e8">
                                    <!--끝까지 안나와서 그라데이션-->
                                    <!--<Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0" Color="#15FFFFFF" />
                                            <GradientStop Offset="1" Color="#00FFFFFF" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>-->
                                </Rectangle>
                            </Grid>
                        </Border>
                        <GridViewRowPresenter x:Name="PART_Content" Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Rectangle x:Name="PART_SelectionGripper" Fill="Transparent" Visibility="Hidden" Opacity="0.3" />
                        <Rectangle x:Name="PART_CanDrop" Fill="Transparent" Stroke="{DynamicResource Brush_PointColor}"
                                   StrokeThickness="1"
                                   Visibility="Hidden" IsHitTestVisible="False" />
                        <Border x:Name="KeyboardFocusedObject" Background="#44afd7ff" BorderBrush="#FF5fa5f0"
                                BorderThickness="0,1" IsHitTestVisible="False" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="KeyboardFocusedObject" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Over" />
                        </MultiTrigger>
                        <!--아이템은 선택도 안되고 리스트는 언포커스-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <!--선택되었으나 포커스를 잃은 상태. 포커스상태와 차이를 두기위해 적용-->
                            <!--<Setter Property="Opacity" Value="0.75" TargetName="PART_Content" />-->
                        </MultiTrigger>
                        <!--선택되고 리스트는 언포커스-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--아이템이 선택되었을 때 버튼 등이 클릭될 수 있도록 zindex 위로. 선택되지 않았을 때는 Selection Gripper가 보이지 않으므로 상관없음-->
                            <Setter Property="Background" Value="#FFe9ebef" />
                            <Setter Property="Panel.ZIndex" Value="1" TargetName="PART_Content" />
                            <Setter Property="Opacity" Value="0.5" TargetName="PART_ContentArea" />
                            <!--아이템이 선택된 상태에서 포커스가 사라지면 너무 선택된 느낌이 안나서 주석 해제-->
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Select" />
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="PART_SelectionGripper" />-->
                        </MultiTrigger>
                        <!--선택되고 리스트도 포커스드-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--아이템이 선택되었을 때 버튼 등이 클릭될 수 있도록 zindex 위로. 선택되지 않았을 때는 Selection Gripper가 보이지 않으므로 상관없음-->
                            <!--<Setter Property="Background" Value="#FFe9ebef"/>-->
                            <Setter Property="Panel.ZIndex" Value="1" TargetName="PART_Content" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Select" />
                            <!--<Setter Property="Visibility" Value="Collapsed" TargetName="PART_Over" />-->
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="PART_SelectionGripper" />-->
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>

                        <!--<Trigger Property="mz:DragDropProperty.CanDrop" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_CanDrop" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--자체적으로 스크롤되지 않도록 개조한 ListView. ScrollViewer 내부에 포함됨-->
    <Style x:Key="Style_ListViewInScrollViewer" TargetType="{x:Type ListView}"
           BasedOn="{StaticResource Style_ListViewDefault}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <DockPanel Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}">
                                <!--<ScrollViewer DockPanel.Dock="Top" Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">-->
                                <GridViewHeaderRowPresenter DockPanel.Dock="Top" Focusable="False"
                                                            AllowsColumnReorder="{Binding View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Columns="{Binding View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--</ScrollViewer>-->
                                <ItemsPresenter x:Name="PART_ScrollContentPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Local"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                            <!--<DockPanel Background="Transparent" Grid.Column="1" LastChildFill="False" Grid.Row="1">
                                <Rectangle DockPanel.Dock="Left" Fill="Transparent"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1" />
                                <Rectangle DockPanel.Dock="Top" Fill="Transparent" Height="1"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                            </DockPanel>-->
                        </Grid>
                        <!--<Grid>-->
                        <!--<ScrollViewer Padding="{TemplateBinding Padding}" Background="Transparent" Focusable="False" FocusVisualStyle="{x:Null}">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>-->
                        <!--</Grid>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>