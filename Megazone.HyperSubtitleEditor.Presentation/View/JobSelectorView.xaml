<UserControl x:Class="Megazone.HyperSubtitleEditor.Presentation.View.JobSelectorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mz="http://schemas.megazone.co.kr"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:view="clr-namespace:Megazone.HyperSubtitleEditor.Presentation.View"
             xmlns:itemViewModel="clr-namespace:Megazone.HyperSubtitleEditor.Presentation.ViewModel.ItemViewModel"
             xmlns:resources="clr-namespace:Megazone.SubtitleEditor.Resources;assembly=Megazone.SubtitleEditor.Resources"
             mc:Ignorable="d" Width="580" Height="640"
             DataContext="{Binding Source={StaticResource SubtitleViewModelLocator}, Path=JobSelector}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <mz:DesignTimeResourceDictionary
                    ProjectName="Megazone.HyperSubtitleEditor.Presentation"
                    Source="/Megazone.HyperSubtitleEditor.Presentation;component/DesignTimeResourceDictionary.xaml" />
                <ResourceDictionary Source="CommandDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <mz:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
            <mz:EqualStringToTrueNFalseConverter x:Key="EqualStringToTrueNFalseConverter"/>
            <mz:CurrentDateTimeBasedDateTimeConverter x:Key="CurrentDateTimeBasedDateTimeConverter"
                                                      CntConverterBefore="{x:Static resources:Resource.CNT_CONVERTER_BEFORE}"
                                                      CntConverterBeforeMinutes="{x:Static resources:Resource.CNT_CONVERTER_BEFORE_MINUTES}"
                                                      CntConverterBeforeHours="{x:Static resources:Resource.CNT_CONVERTER_BEFORE_HOURS}"
                                                      CntConverterYesterday="{x:Static resources:Resource.CNT_CONVERTER_YESTERDAY}"
                                                      CntConverterYyyymmdd="{x:Static resources:Resource.CNT_CONVERTER_YYYYMMDD}"
                                                      CntConverterMmdd="{x:Static resources:Resource.CNT_CONVERTER_MMDD}" />
            <mz:BooleanToVisibleNHiddenConverter x:Key="BooleanToVisibleNHiddenConverter" />
            <!--링크 카피용 스몰 버튼 베이스-->
            <Style x:Key="Style_SmallTransparentButton" TargetType="{x:Type Button}"
                   BasedOn="{StaticResource Style_TransparentButton}">
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Background="Transparent">
                                <Border Background="{TemplateBinding Background}" CornerRadius="2">
                                    <ContentPresenter x:Name="PART_Content"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}" />
                                </Border>
                                <Rectangle x:Name="PressedBorder" RadiusX="2" RadiusY="2" Stroke="Black" Opacity="0.02"
                                           Visibility="Collapsed" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFeaecef" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="PressedBorder" />
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFd7d9df" Offset="0" />
                                                <GradientStop Color="#FFdfe1e6" Offset="0.2" />
                                                <GradientStop Color="#FFdfe1e6" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <!--<Setter Property="Opacity" Value="0.3" TargetName="PART_Content" />-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="RootGrid">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Border Style="{StaticResource Style_PopupContentAreaBorder}">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border BorderBrush="{StaticResource Brush_Border_Outer_Line_Color}" BorderThickness="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ListBox x:Name="JobItemsControl" ItemsSource="{Binding Jobs}" SelectedIndex="0"
                                 Focusable="False" Background="White"
                                 SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 mz:ListBoxProperty.GuideText="{x:Static resources:Resource.CNT_CRITERIA_NOT_MATCH_RESULT}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}"
                                       BasedOn="{StaticResource Style_ListBoxItemDefault}">
                                    <Setter Property="Height" Value="90" />
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type itemViewModel:JobItemViewModel}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Margin="20,10,20,10" VerticalAlignment="Center">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <StackPanel TextBlock.FontWeight="Bold" Orientation="Horizontal">
                                                <TextBlock Text="{x:Static resources:Resource.CNT_JOB_ID}"
                                                           Foreground="#FF2887f5" />
                                                <TextBlock Text="{Binding Id}" />
                                            </StackPanel>
                                            <TextBlock Grid.Row="1" Margin="0,5" Background="Transparent"
                                                       Text="{Binding InputVideoName}"
                                                       ToolTip="{Binding InputVideoName}" />
                                            <TextBlock Grid.Row="2" Foreground="#FF878f9b" FontSize="11px"
                                                       Background="Transparent" ToolTip="{Binding FinishTime}"
                                                       Text="{Binding Path=FinishTime, Converter={StaticResource CurrentDateTimeBasedDateTimeConverter}}" />
                                        </Grid>
                                        <Rectangle Fill="Black" Grid.Column="1" Opacity="0.1" />
                                        <view:MiniMediaPlayerView Grid.Column="1" VerticalAlignment="Stretch"
                                                                  Width="160" Height="90"
                                                                  x:Name="MiniMeidaPlayerView"
                                                                  BufferingSeconds="{Binding VideoBufferingSeconds}"
                                                                  GroupName="PlayVideoPreview"
                                                                  HasAudioOnly="{Binding HasAudioOnly}"
                                                                  MediaSource="{Binding Path=Url}"
                                                                  NaturalDuration="{Binding Path=NaturalDuration}"
                                                                  ThumbnailSource="{Binding Path=ThumbnailSource}"
                                                                  IsEnabled="{Binding Path=Status, Converter={StaticResource EqualStringToTrueNFalseConverter}, ConverterParameter=Complete}" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                        <Border Grid.Row="1" Height="46" BorderThickness="0,1,0,0" BorderBrush="{StaticResource Brush_Border_Outer_Line_Color}">
                            <Grid Margin="20,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <CheckBox Content="{x:Static resources:Resource.CNT_LOAD_ALL_CAPTIONS}"
                                          IsChecked="{Binding ShouldImportAllSubtitles, Mode=TwoWay}" />
                                <CheckBox x:Name="OpenVideoCheckBox" Grid.Column="2"
                                          Content="{x:Static resources:Resource.CNT_OPEN_VIDEO}" Margin="10,0"
                                          IsChecked="{Binding IsConnectVideoChecked, Mode=TwoWay}" />
                                <ComboBox Grid.Column="3"
                                          IsEnabled="{Binding IsChecked, ElementName=OpenVideoCheckBox}"
                                          VerticalAlignment="Center" Width="160"
                                          SelectedIndex="{Binding SelectedOutputIndex, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                          ItemsSource="{Binding SelectedItem.Outputs, FallbackValue={x:Null}, TargetNullValue={x:Null}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DisplayName}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
                <Rectangle Grid.Row="1" Fill="#FFeceef0" Height="2" />
            </Grid>
        </Border>

        <!--하단 버튼 영역-->
        <Border Grid.Row="1" Style="{StaticResource Style_PopupBottomButtonAreaBorder}">
            <Grid Margin="20,10" Grid.IsSharedSizeScope="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="ButtonWidth" />
                    <ColumnDefinition />
                    <ColumnDefinition SharedSizeGroup="ButtonWidth" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition SharedSizeGroup="ButtonWidth" />
                </Grid.ColumnDefinitions>
                <Button Content="{x:Static resources:Resource.CNT_REFRESH}"
                        Style="{StaticResource Style_IconLabelButton}" Command="{Binding RefreshCommand}" />
                <Button Grid.Column="2" Content="{x:Static resources:Resource.CNT_CONFIRM}" IsDefault="True"
                        Command="{Binding OkCommand}"
                        Click="ButtonBase_OnClick" />
                <Button Grid.Column="4" Content="{x:Static resources:Resource.CNT_CANCEL}" Click="ButtonBase_OnClick" />

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <!--이전페이지/다음페이지 이동-->
                    <StackPanel Orientation="Horizontal" Margin="10,0,0,0"
                                DataContext="{Binding PagingViewModel}"
                                Visibility="{Binding IsPagingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button Style="{StaticResource Style_TransparentButton}"
                                ToolTip="{x:Static resources:Resource.CNT_PREVIOUS_PAGE}"
                                Command="{Binding PreviousCommand}" IsEnabled="{Binding HasPrevious}">
                            <Image Stretch="None"
                                   Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_NavBackward.png" />
                        </Button>
                        <Button Style="{StaticResource Style_TransparentButton}"
                                ToolTip="{x:Static resources:Resource.CNT_NEXT_PAGE}"
                                Command="{Binding NextCommand}" IsEnabled="{Binding HasNext}">
                            <Image Stretch="None"
                                   Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_NavForward.png" />
                        </Button>
                    </StackPanel>

                    <!--잡의 갯수 표시-->
                    <StackPanel Grid.Column="1" Margin="5,0" TextBlock.Foreground="#FF697382" Orientation="Horizontal"
                                VerticalAlignment="Center">
                        <TextBlock Text="{Binding ElementName=JobItemsControl, Path=Items.Count, FallbackValue=0}" />
                        <TextBlock Text=" / " />
                        <TextBlock Text="{Binding Path=Jobs.Count}" FontWeight="Bold" />
                        <TextBlock Text=" Jobs" />
                    </StackPanel>
                </StackPanel>

            </Grid>
        </Border>

        <Control x:Name="LoadingProgressView" Visibility="Collapsed"
                 Style="{StaticResource Style_IndeterminateControl}" />
    </Grid>
</UserControl>