<UserControl x:Class="Megazone.HyperSubtitleEditor.Presentation.View.MediaPlayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mz="http://schemas.megazone.co.kr"
             xmlns:converters="clr-namespace:Megazone.HyperSubtitleEditor.Presentation.Converter"
             xmlns:behavior="clr-namespace:Megazone.HyperSubtitleEditor.Presentation.Behavior"
             xmlns:resources="clr-namespace:Megazone.SubtitleEditor.Resources;assembly=Megazone.SubtitleEditor.Resources"
             xmlns:viewModelData="clr-namespace:Megazone.HyperSubtitleEditor.Presentation.ViewModel.Data"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="400"
             d:DataContext="{Binding Source={StaticResource SubtitleViewModelLocator}, Path=Subtitle.MediaPlayer}"
             Name="MediaPlayer"
             Loaded="MediaPlayerView_OnLoaded"
             Unloaded="MediaPlayerView_OnUnloaded">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <mz:DesignTimeResourceDictionary
                    Source="/Megazone.HyperSubtitleEditor.Presentation;component/DesignTimeResourceDictionary.xaml" />
                <ResourceDictionary Source="CommandDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:PlayDurationTimeConverter x:Key="PlayDurationTimeConverter" />
            <mz:BooleanToCollapsedNVisibleConverter x:Key="BooleanToCollapsedNVisibleConverter" />
            <mz:NullToCollapsedNVisibleConverter x:Key="NullToCollapsedNVisibleConverter" />
            <mz:NullToVisibleNCollapsedConverter x:Key="NullToVisibleNCollapsedConverter"/>

            <Style TargetType="{x:Type mz:VideoElement}">
                <Setter Property="Background" Value="Black" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type mz:VideoElement}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Image Name="Part_ScreenControl" AllowDrop="{TemplateBinding AllowDrop}" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Rich Editor Style-->
            <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="#FFbec4ce" />
                <Setter Property="Foreground" Value="#FF222222" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="AllowDrop" Value="true" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Padding" Value="5,7" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="SelectionBrush" Value="#FF75adea" />
                <Setter Property="SelectionOpacity" Value="0.5" />
                <Setter Property="CaretBrush" Value="#FFccd9e9" />
                <Setter Property="TextBlock.LineStackingStrategy" Value="MaxHeight" />
                <Setter Property="TextBlock.LineHeight" Value="3px" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Grid>
                                <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}"
                                                  Focusable="false" HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.4" TargetName="PART_ContentHost" />
                                    <Setter Property="Opacity" Value="0.6" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="#FF97c3f3" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="#FF67a9ef" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                            <Condition Property="IsSelectionActive" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush"
                                Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type RichTextBox}">
                <Style.Resources>
                    <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                    </Style>
                    <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}"
                           TargetType="{x:Type Hyperlink}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="Blue" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
                <Setter Property="MinWidth" Value="10" />
                <Style.BasedOn>
                    <StaticResource ResourceKey="{x:Type TextBoxBase}" />
                </Style.BasedOn>
            </Style>

            <ControlTemplate x:Key="MyDropDownCustomStyle" TargetType="ComboBoxItem">
                <Border BorderBrush="#39393a"
                        BorderThickness="0,0,0,1"
                        SnapsToDevicePixels="true">
                    <Grid Background="#151a2f"
                          MinHeight="40"
                          MaxWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}, Path=ActualWidth}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <!-- Binds directly to the item data, you can change this depending on your data source -->
                        <Border Grid.Column="0"
                                Height="14"
                                CornerRadius="2"
                                Margin="10,0,10,0"
                                VerticalAlignment="Center">
                            <TextBlock x:Name="TypeBox"
                                       FontSize="10"
                                       Foreground="White"
                                       FontWeight="ExtraBold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       TextAlignment="Center"
                                       Text="{Binding TypeString}" />
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TypeString}" Value="HLS">
                                            <Setter Property="Background" Value="#8660d9" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeString}" Value="MP4">
                                            <Setter Property="Background" Value="#405fff" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeString}" Value="DASH">
                                            <Setter Property="Background" Value="#5D8FFF" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TypeString}" Value="NONE">
                                            <Setter Property="Background" Value="#5D8FFF" />
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </Border.Style>
                        </Border>

                        <TextBlock Grid.Column="1"
                                   x:Name="UrlBox"
                                   MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"
                                   FontSize="11"
                                   Background="Transparent"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Foreground="White"
                                   Margin="0,0,10,0"
                                   TextTrimming="CharacterEllipsis"
                                   Text="{Binding Url}" />

                        <Image Grid.Column="2"
                               x:Name="SelectedVideoImage"
                               Visibility="Collapsed"
                               Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_video_selected.png"
                               Margin="0,0,10,0" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Visibility" Value="Visible" TargetName="SelectedVideoImage" />
                        <Setter Property="Foreground" Value="#7d89a3" TargetName="UrlBox" />
                        <Setter Property="Foreground" Value="#ffffff" TargetName="TypeBox" />
                        <Setter Property="Opacity" Value="0.3" TargetName="TypeBox" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Black" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="40" />
            <RowDefinition />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>

        <!--<Border BorderThickness="0,0,0,1" Background="Black" 
                    VerticalAlignment="Top"
                    HorizontalAlignment="Stretch"
                    Width="Auto"
                    ToolTip="{Binding ElementName=MediaPlayer, Path=MediaSource}">-->

        <Grid>
            <Border BorderBrush="#262f4d" BorderThickness="0,1" Background="#262f4d" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" 
                        Visibility="{Binding IsPreview, Converter={StaticResource BooleanToCollapsedNVisibleConverter}}">
                    <Image  Width="21" Height="15" Margin="10,0,9,0"
                        Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_video_icon.png" />
                    <TextBlock Text="자막의 원본 비디오"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="12"/>
                </StackPanel>

                <StackPanel Grid.Column="0" Orientation="Horizontal" 
                        Visibility="{Binding IsPreview, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Image  Width="21" Height="15" Margin="10,0,9,0"
                        Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_preview_title.png" />
                    <TextBlock Text="미리보기 비디오"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="12"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Grid.Column="2" Visibility="{Binding WorkBar.VideoItem, Source={StaticResource SubtitleViewModelLocator}, 
                Converter={StaticResource NullToCollapsedNVisibleConverter}}">
                    <Button  
                        Style="{StaticResource Style_VideoBarButton}" 
                        Margin="5,0"
                        Visibility="{Binding IsPreview, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}"
                        Command="{Binding ChangeWithOriginalSourceCommand}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Width="14" Height="12" Margin="2,0,8,0"
                                   Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_caption_element_reset.png" />
                            <TextBlock Grid.Column="1" Text="원본 보기" />
                        </Grid>
                    </Button>
                    <Rectangle 
                        Fill="#78828e" 
                        Height="26" Width="1"
                        Visibility="{Binding IsPreview, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}"/>
                </StackPanel>
                <Button Grid.Column="4" Style="{StaticResource Style_VideoBarButton}" Margin="5,0"
                    Content="미리보기 교체"
                    Command="{StaticResource ShowOpenVideoAddressWindowCommand}"/>
            </Grid>

        </Grid>


        <Grid Grid.Row="1" Background="#181d30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <!--<ColumnDefinition Width="40" />-->
            </Grid.ColumnDefinitions>

            <ComboBox x:Name="TypeUrlList"
                      Grid.Column="0"
                      HorizontalAlignment="Stretch"
                      Style="{StaticResource Style_ComboBoxVideoType}"
                      ItemsSource="{Binding Path=VideoTypes}"
                      ToolTip="{Binding Path=SelectedItem.Url,ElementName=TypeUrlList}"
                      SelectedItem="{Binding Path=CurrentVideoType}"
                      Margin="0,0,0,0"
                      DropDownOpened="TypeUrlList_OnDropDownOpened">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Template" Value="{StaticResource MyDropDownCustomStyle}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <!--<Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="SelectedVideoImage"/>
                                </Trigger>
                            </Style.Triggers>-->
                    </Style>
                </ComboBox.ItemContainerStyle>

                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewModelData:MediaKind}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Height="14"
                                    CornerRadius="2"
                                    Margin="10,0,10,0"
                                    VerticalAlignment="Bottom">
                                <TextBlock FontSize="10"
                                           Foreground="White"
                                           FontWeight="ExtraBold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           TextAlignment="Center"
                                           Text="{Binding TypeString}" />
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TypeString}" Value="HLS">
                                                <Setter Property="Background" Value="#8660d9" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TypeString}" Value="MP4">
                                                <Setter Property="Background" Value="#405fff" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TypeString}" Value="DASH">
                                                <Setter Property="Background" Value="#5D8FFF" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TypeString}" Value="NONE">
                                                <Setter Property="Background" Value="#5D8FFF" />
                                            </DataTrigger>
                                        </Style.Triggers>

                                    </Style>
                                </Border.Style>
                            </Border>

                            <TextBlock Grid.Column="1"
                                       TextTrimming="CharacterEllipsis"
                                       Text="{Binding Url}" />
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ComboBox>

            <!--<Button Grid.Column="1"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    Foreground="White"
                    Style="{StaticResource Style_ImageVideoOpenButton}"
                    Command="{StaticResource ShowOpenVideoAddressWindowCommand}" />-->
        </Grid>
        <!--</Border>-->

        <Grid Grid.Row="2">
            <mz:VideoElement x:Name="VideoElement" LoadedBehavior="Manual"
                             BufferingSeconds="{Binding ElementName=MediaPlayer, Path=BufferingSeconds, Mode=OneWay}"
                             PlaybackReadyTimeOut="{Binding ElementName=MediaPlayer, Path=PlaybackReadyTimeOut, Mode=OneWay}"
                             Volume="{Binding ElementName=VolumeSlider, Path=Value, Mode=OneWay}"
                             OnPositionChanged="VideoElement_OnOnPositionChanged"
                             PlayStateChanged="VideoElement_OnPlayStateChanged">
                <i:Interaction.Behaviors>
                    <behavior:VideoElementLogBehavior />
                    <behavior:VideoElementStopBehavior />
                </i:Interaction.Behaviors>
            </mz:VideoElement>

            <!--비디오의 썸네일 이미지.-->
            <Image Source="{Binding Path=ThumbnailSource}" Stretch="Uniform"
                   Visibility="{Binding ElementName=MediaPlayer, Path=IsThumbnailVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <!--오디오만 있을때 보여지는 기본이미지-->
            <Image x:Name="AudioDefaultImage" Stretch="Uniform"
                   Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_AudioThumbnail.png"
                   Visibility="{Binding ElementName=MediaPlayer, Path=HasAudioOnly, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Viewbox Stretch="Uniform">
                <Grid Width="1920" Height="1080" IsHitTestVisible="False">
                    <RichTextBox IsReadOnly="True" Margin="80" MinHeight="100" Foreground="White"
                                 TextOptions.TextFormattingMode="Display"
                                 HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="60">
                        <RichTextBox.Resources>
                            <Style TargetType="{x:Type Paragraph}">
                                <Setter Property="Margin" Value="0,5" />
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="{x:Type Run}">
                                <Setter Property="Background" Value="#AA000000" />
                            </Style>
                        </RichTextBox.Resources>
                        <i:Interaction.Behaviors>
                            <behavior:InterpretRichTextBoxBehavior
                                BoundDocument="{Binding ElementName=MediaPlayer, Path=SubtitleFlowDocumentText, Mode=OneWay, FallbackValue={x:Null}}" />
                        </i:Interaction.Behaviors>
                    </RichTextBox>
                </Grid>
            </Viewbox>

            <!--오류 버퍼 등 상태 정보를 알리는 영역-->
            <Grid>
                <!--재생 오류상태 > 잡 에러 아님. 잡에러는 상위 datatemplate에서 처리-->
                <Grid
                    Visibility="{Binding ElementName=VideoElement, Path=HasError, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.Background>
                        <ImageBrush
                            ImageSource="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_Noise.png"
                            Stretch="Fill" />
                    </Grid.Background>
                    <TextBlock Foreground="White" Opacity="0.7" LineHeight="20px"
                               LineStackingStrategy="BlockLineHeight"
                               Text="{x:Static resources:Resource.MSG_ERROR_TRYING_TO_PLAY}" TextAlignment="Center"
                               HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>
                <!--버퍼링 중 노출되는 화면-->
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=VideoElement, Path=IsBuffering}"
                                             Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=VideoElement, Path=IsSeeking}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Rectangle Fill="Black" Opacity="0.3" />
                    <Grid VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Image Stretch="None"
                               Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_Hourglass.png"
                               Margin="0,0,0,5" />
                        <TextBlock Grid.Row="1" Text="{x:Static resources:Resource.CNT_WAITING}" FontWeight="Bold"
                                   Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Margin="3,0,-3,0" />
                    </Grid>
                </Grid>
            </Grid>


        </Grid>

        <Border Grid.Row="3" BorderBrush="#FFbec4ce" BorderThickness="0,1,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="47" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="140" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <CheckBox Name="MediaPlaybackButton">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource Style_DefaultFocusVisual}" />
                            <Setter Property="UseLayoutRounding" Value="True" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="#FFbec4ce" />
                            <Setter Property="BorderThickness" Value="0,0,1,0" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type CheckBox}">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Image x:Name="PlayIcon"
                                                       Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_SubtitleEditor_Play.png"
                                                       Stretch="None" />
                                                <Image x:Name="PauseIcon"
                                                       Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_SubtitleEditor_Pause.png"
                                                       Stretch="None" Visibility="Collapsed" />
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <ImageBrush
                                                            ImageSource="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_SubtitleEditor_PlayButton_Over.png" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <ImageBrush
                                                            ImageSource="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_SubtitleEditor_PlayButton_Pressed.png" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Visibility" Value="Visible" TargetName="PauseIcon" />
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="PlayIcon" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>

                <Slider Grid.Column="1" VerticalAlignment="Center" IsMoveToPointEnabled="True" Margin="20,0"
                        Focusable="False">
                    <i:Interaction.Behaviors>
                        <behavior:VideoElementSeekingBehavior TargetVideoElement="{Binding ElementName=VideoElement}" />
                    </i:Interaction.Behaviors>
                </Slider>

                <!--Seeking 슬라이더-->
                <StackPanel Grid.Column="1" IsHitTestVisible="False" TextBlock.FontSize="11px" Orientation="Horizontal"
                            VerticalAlignment="Bottom" Margin="19,5">
                    <TextBlock Foreground="#FF4191f6"
                               Text="{Binding ElementName=VideoElement, Path=PositionSeconds, Converter={StaticResource PlayDurationTimeConverter}}" />
                    <TextBlock Text="/" Margin="3,0" />
                    <TextBlock
                        Text="{Binding ElementName=MediaPlayer, Path=NaturalDuration, Converter={StaticResource PlayDurationTimeConverter}}" />
                </StackPanel>

                <ComboBox Grid.Column="2"
                          Background="Transparent"
                          Foreground="Black"
                          BorderThickness="0"
                          BorderBrush="Transparent"
                          ItemsSource="{Binding Path=Resolutions}"
                          SelectedItem="{Binding Path=CurrentResolution}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayString}"
                                       HorizontalAlignment="Center" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <!--볼륨 슬라이더-->
                <StackPanel Grid.Column="3" Margin="0,0,10,0" Orientation="Horizontal" VerticalAlignment="Center">
                    <CheckBox Name="MuteButton" VerticalAlignment="Center" Margin="0,0,5,0">
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource Style_TransparentCheckBox}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type CheckBox}">
                                            <Grid Background="Transparent">
                                                <Border Background="{TemplateBinding Background}" CornerRadius="2">
                                                    <Grid x:Name="PART_Content"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Margin="{TemplateBinding Padding}">
                                                        <Image x:Name="NormalIcon" Stretch="None"
                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                               Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_SubtitleEditor_Volume.png" />
                                                        <Image x:Name="MuteIcon" Visibility="Collapsed"
                                                               Margin="2,0,-2,0"
                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                               Stretch="None"
                                                               Source="pack://application:,,,/Megazone.HyperSubtitleEditor.Presentation.Resource;component/Image/img_SubtitleEditor_Mute.png" />
                                                    </Grid>
                                                </Border>
                                                <Rectangle x:Name="PressedBorder" RadiusX="2" RadiusY="2"
                                                           Stroke="Black" Opacity="0.02" Visibility="Collapsed" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FFeaecef" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"
                                                            TargetName="PressedBorder" />
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                <GradientStop Color="#FFd7d9df" Offset="0" />
                                                                <GradientStop Color="#FFdfe1e6" Offset="0.2" />
                                                                <GradientStop Color="#FFdfe1e6" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"
                                                            TargetName="NormalIcon" />
                                                    <Setter Property="Visibility" Value="Visible" TargetName="MuteIcon" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.3" TargetName="PART_Content" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <Slider x:Name="VolumeSlider" Width="63" VerticalAlignment="Center" IsMoveToPointEnabled="True"
                            Value="{Binding ElementName=MediaPlayer, Path=Volume}" Maximum="1" Minimum="0"
                            SmallChange="0.025" LargeChange="0.1">
                        <Slider.Style>
                            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource Style_SliderDefault}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Slider}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    SnapsToDevicePixels="True">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto"
                                                                       MinHeight="{TemplateBinding MinHeight}" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <Track x:Name="PART_Track" Grid.Row="1">
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                                                          Focusable="False">
                                                                <RepeatButton.Template>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border Background="Transparent">
                                                                            <Border Background="#FF78818e" Height="4" />
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </RepeatButton.Template>
                                                            </RepeatButton>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                                                          Focusable="False">
                                                                <RepeatButton.Template>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border Background="Transparent">
                                                                            <Border Background="#FFd9dde4" Height="4" />
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </RepeatButton.Template>
                                                            </RepeatButton>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb x:Name="Thumb" Focusable="False" Height="16"
                                                                   OverridesDefaultStyle="True"
                                                                   VerticalAlignment="Center" Width="16" Margin="-8,0">
                                                                <Thumb.Template>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" />
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver"
                                                                                     Value="True" />
                                                                            <Trigger Property="IsDragging" Value="True" />
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Thumb.Template>
                                                            </Thumb>
                                                        </Track.Thumb>
                                                    </Track>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.3" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Slider.Style>
                    </Slider>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>